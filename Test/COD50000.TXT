OBJECT Codeunit 50000 Test Dotnet String Split
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            TestDotNetStringSplit;
            MESSAGE('Success!');
          END;

  }
  CODE
  {

    PROCEDURE TestDotNetStringSplit@1();
    VAR
      NameValueBuffer@1001 : TEMPORARY Record 823;
      DotNet_String@1000 : Codeunit 3007;
      SplitChar@1002 : Char;
      TestValue@1003 : ARRAY [4] OF Text;
    BEGIN
      SplitChar := 9;

      TestValue[1] := 'This is the first value';
      TestValue[2] := 'This is the second value';
      TestValue[3] := PADSTR('This is a long value',1000,'A');
      TestValue[3] := PADSTR('This is a longer value',5000,'B');

      DotNet_String.Set(
        TestValue[1] + FORMAT(SplitChar) +
        TestValue[2] + FORMAT(SplitChar) +
        TestValue[3] + FORMAT(SplitChar) +
        TestValue[4] );

      DotNet_String.Split(SplitChar,NameValueBuffer);

      NameValueBuffer.GET(1);
      IF NameValueBuffer.GetValue <> TestValue[1] THEN
        ERROR('Incorrect result value from split');

      NameValueBuffer.GET(2);
      IF NameValueBuffer.GetValue <> TestValue[2] THEN
        ERROR('Incorrect result value from split');

      NameValueBuffer.GET(3);
      IF NameValueBuffer.GetValue <> TestValue[3] THEN
        ERROR('Incorrect result value from split');

      NameValueBuffer.GET(4);
      IF NameValueBuffer.GetValue <> TestValue[4] THEN
        ERROR('Incorrect result value from split');
    END;

    BEGIN
    END.
  }
}

